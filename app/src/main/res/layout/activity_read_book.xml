<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".bookReadActivity.readBookActivity"
    android:fitsSystemWindows="true">
    <TextView
        android:id="@+id/book_content"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:text="标题太难取了，其实本文主要就是讲如何控制文本大小，让其自动适配宽度，其次我们还需要精准控制Text的高度和宽度间距等属性。一般我们的布局都是分 match parent 和 wrap content 而他们的自动方式又有所不同。下面看看都有哪些方式来实现！官方推出的TextView的Autosizing方式，在宽度固定的情况下，可以设置最大文本Size和最小文本Size和每次缩放粒度，非常方便的就能实现该功能。autoSizeTextType：设置 TextView 是否支持自动改变文本大小，none 表示不支持，uniform 表示支持。
autoSizeMinTextSize：最小文字大小，例如设置为10sp，表示文字最多只能缩小到10sp。
autoSizeMaxTextSize：最大文字大小，例如设置为18sp，表示文字最多只能放大到18sp。
autoSizeStepGranularity：缩放粒度，即每次文字大小变化的数值，例如设置为1sp，表示每次缩小或放大的值为1sp。把第二步中自定义View计算宽度的方法抽取出来，我们可以可以得到一个工具类如下：可以看到2个都是wrap content，那么如何实现这种适应宽度+多布局的变长宽度效果呢。其实就是需要我们调用方法手动的计算金额TextView的宽度而不同的TestSize 它的间距还不同，比如上文中我们一个很小的 TextView 和一个很大的 TextView 在一起排列的时候，特别是大的 TextView 还是 AutoSize 的情况下，实现一些对齐效果就很难实现，我们就需要考虑到去除间距，只保留上图灰色的矩形框来绘制文本。"
        android:gravity="center"
        android:textSize="20dp"
        android:autoSizeTextType="uniform"
        android:autoSizeMaxTextSize="18sp"
        android:autoSizeMinTextSize="10sp"
        android:autoSizeStepGranularity="1sp"
        android:textColor="@color/black">

    </TextView>

</androidx.constraintlayout.widget.ConstraintLayout>